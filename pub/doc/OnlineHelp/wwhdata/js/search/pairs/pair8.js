function FileData_Pairs(x)
{
x.t("resumes","cancels");
x.t("clock","leave");
x.t("clock","repeating");
x.t("example","want");
x.t("example","suppose");
x.t("complex","repeating");
x.t("complex","schedule");
x.t("-2014","software");
x.t("possible","actions");
x.t("available","tasks");
x.t("2007","-2014");
x.t("protected","acl");
x.t("just","once");
x.t("day","want");
x.t("every","hours");
x.t("every","minute");
x.t("every","month");
x.t("every","minutes");
x.t("create","new");
x.t("create","scheduled");
x.t("description","description");
x.t("description","task");
x.t("integration","server");
x.t("built-in","services");
x.t("delayed","interval");
x.t("delayed","run");
x.t("matter","late");
x.t("once","specified");
x.t("once","select");
x.t("once","option");
x.t("once","suspend");
x.t("related","topics");
x.t("action","server");
x.t("completion","box");
x.t("completion","whether");
x.t("scheduler","create");
x.t("scheduler","user");
x.t("scheduler","creating");
x.t("scheduler","return");
x.t("scheduler","screen");
x.t("scheduler","schedule");
x.t("user","name");
x.t("user","tasks");
x.t("user","specifies");
x.t("user","task");
x.t("execute","every");
x.t("execute","once");
x.t("execute","specified");
x.t("execute","yyyy/mm/dd");
x.t("execute","hh:mm:dd");
x.t("execute","service");
x.t("execute","assigning");
x.t("current","time");
x.t("current","date");
x.t("xxx","minutes");
x.t("field","blank");
x.t("field","accept");
x.t("field","note");
x.t("field","specify");
x.t("until","administrator");
x.t("blank","server");
x.t("uses","current");
x.t("last","time");
x.t("last","date");
x.t("schedules","effect");
x.t("administrator","resumes");
x.t("administrator","service");
x.t("state","until");
x.t("leave","field");
x.t("open","create");
x.t("open","scheduler");
x.t("type","details");
x.t("type","string");
x.t("86400","seconds");
x.t("times","want");
x.t("times","particular");
x.t("time","last");
x.t("time","time");
x.t("time","want");
x.t("time","repeating");
x.t("time","skip");
x.t("time","yyyy/mm/dd");
x.t("time","number");
x.t("time","hh:mm:ss");
x.t("time","end");
x.t("time","option");
x.t("time","interval");
x.t("time","schedule");
x.t("time","optional");
x.t("time","save");
x.t("suspended","state");
x.t("execution","sks");
x.t("execution","task");
x.t("execution","enable");
x.t("execution","service");
x.t("execution","even");
x.t("shut","down");
x.t("down","restart");
x.t("darmstadt","germany");
x.t("default","servers");
x.t("default","server");
x.t("servers","scheduler");
x.t("servers","clustered");
x.t("servers","cluster");
x.t("new","tasks");
x.t("new","task");
x.t("new","scheduled");
x.t("want","integration");
x.t("want","execute");
x.t("want","schedule");
x.t("want","scheduled");
x.t("want","service");
x.t("want","server");
x.t("start","time");
x.t("start","next");
x.t("start","date");
x.t("details","section");
x.t("getdata","service");
x.t("clustered","environments");
x.t("repeating","select");
x.t("repeating","option");
x.t("repeating","schedule");
x.t("repeating","repeat");
x.t("list","scheduled");
x.t("pub.scheduler","folder");
x.t("again","next");
x.t("indefinitely","end");
x.t("assign","values");
x.t("assign","inputs");
x.t("actions","run");
x.t("complete","default");
x.t("complete","starting");
x.t("complete","running");
x.t("check","repeat");
x.t("saves","specified");
x.t("sure","specify");
x.t("specified","times");
x.t("specified","time");
x.t("specified","interval");
x.t("specified","schedule");
x.t("specified","date");
x.t("35000","possible");
x.t("creating","new");
x.t("name","service");
x.t("name","authorized");
x.t("wait","previous");
x.t("wait","service");
x.t("box","server");
x.t("hours","specify");
x.t("settings","complex");
x.t("tasks","create");
x.t("tasks","servers");
x.t("tasks","new");
x.t("tasks","saves");
x.t("tasks","screen");
x.t("tasks","service");
x.t("tasks","run");
x.t("minute","sometimes");
x.t("folder.subfolder:service","specifies");
x.t("perform","task");
x.t("skip","execution");
x.t("skip","run");
x.t("parameters","data");
x.t("misses","scheduled");
x.t("place","task");
x.t("completed","check");
x.t("restart","screen");
x.t("month","define");
x.t("month","e.g");
x.t("string","assigning");
x.t("target","node");
x.t("input","parameters");
x.t("input","values");
x.t("yyyy/mm/dd","format");
x.t("week","month");
x.t("mask","days");
x.t("24-hour","clock");
x.t("begin","executing");
x.t("overwrites","input");
x.t("late","field");
x.t("late","task");
x.t("sometimes","takes");
x.t("next","example");
x.t("next","execution");
x.t("next","scheduled");
x.t("suppose","getdata");
x.t("top-level","input");
x.t("environments","specifies");
x.t("accept","35000");
x.t("select","option");
x.t("first","time");
x.t("executing","delayed");
x.t("executing","service");
x.t("number","minutes");
x.t("number","seconds");
x.t("minutes","xxx");
x.t("minutes","late");
x.t("minutes","define");
x.t("minutes","specify");
x.t("cancels","task");
x.t("cluster","specific_server");
x.t("maximum","number");
x.t("specifies","user");
x.t("specifies","input");
x.t("specifies","whether");
x.t("specifies","task");
x.t("specifies","fully");
x.t("whether","want");
x.t("whether","wait");
x.t("define","complex");
x.t("define","repeating");
x.t("define","schedule");
x.t("particular","days");
x.t("software","darmstadt");
x.t("heading","server");
x.t("hh:mm:ss","format");
x.t("starting","next");
x.t("sks","scheduling");
x.t("section","define");
x.t("section","specify");
x.t("format","leave");
x.t("format","time");
x.t("format","24-hour");
x.t("1800","seconds");
x.t("assigned","service");
x.t("node","specifies");
x.t("overdue","action");
x.t("15th","every");
x.t("task","create");
x.t("task","suspended");
x.t("task","complete");
x.t("task","folder.subfolder:service");
x.t("task","skip");
x.t("task","misses");
x.t("task","overdue");
x.t("task","click");
x.t("task","screen");
x.t("task","schedule");
x.t("task","immediately");
x.t("task","run");
x.t("connected","database");
x.t("enable","complex");
x.t("enable","repeating");
x.t("enable","run");
x.t("end","time");
x.t("end","date");
x.t("return","scheduler");
x.t("return","list");
x.t("fully","qualified");
x.t("folder","run");
x.t("database","default");
x.t("database","server");
x.t("option","available");
x.t("option","want");
x.t("option","specify");
x.t("previous","execution");
x.t("previous","completed");
x.t("click","create");
x.t("click","return");
x.t("e.g","every");
x.t("e.g","administrator");
x.t("e.g","15th");
x.t("hh:mm:dd","format");
x.t("longer","complete");
x.t("qualified","name");
x.t("specific_server","specifies");
x.t("interval","open");
x.t("interval","number");
x.t("interval","e.g");
x.t("running","next");
x.t("usage","screen");
x.t("executions","run");
x.t("executions","service");
x.t("view","system");
x.t("services","pub.scheduler");
x.t("services","scheduling");
x.t("screen","2007");
x.t("screen","create");
x.t("screen","scheduler");
x.t("screen","open");
x.t("screen","shut");
x.t("screen","heading");
x.t("screen","click");
x.t("screen","screen");
x.t("screen","schedule");
x.t("screen","service");
x.t("screen","statistics");
x.t("takes","longer");
x.t("schedule","description");
x.t("schedule","schedules");
x.t("schedule","type");
x.t("schedule","assign");
x.t("schedule","enable");
x.t("schedule","one-time");
x.t("schedule","service");
x.t("information","section");
x.t("information","service");
x.t("data","type");
x.t("one-time","execution");
x.t("optional","last");
x.t("optional","time");
x.t("optional","date");
x.t("save","settings");
x.t("save","tasks");
x.t("values","top-level");
x.t("values","assigned");
x.t("values","note");
x.t("values","service");
x.t("values","using");
x.t("acl","sure");
x.t("choose","task");
x.t("repeat","completion");
x.t("repeat","specified");
x.t("note","assign");
x.t("note","maximum");
x.t("date","day");
x.t("date","time");
x.t("date","want");
x.t("date","start");
x.t("date","optional");
x.t("executes","first");
x.t("executes","service");
x.t("topics","view");
x.t("immediately","matter");
x.t("immediately","related");
x.t("immediately","run");
x.t("service","example");
x.t("service","protected");
x.t("service","every");
x.t("service","execute");
x.t("service","last");
x.t("service","want");
x.t("service","indefinitely");
x.t("service","complete");
x.t("service","target");
x.t("service","first");
x.t("service","executing");
x.t("service","hh:mm:ss");
x.t("service","usage");
x.t("service","executions");
x.t("service","services");
x.t("service","information");
x.t("service","repeat");
x.t("service","executes");
x.t("service","run");
x.t("service","scheduled");
x.t("service","using");
x.t("run","just");
x.t("run","every");
x.t("run","integration");
x.t("run","once");
x.t("run","scheduler");
x.t("run","user");
x.t("run","time");
x.t("run","servers");
x.t("run","again");
x.t("run","specified");
x.t("run","mask");
x.t("run","next");
x.t("run","task");
x.t("run","e.g");
x.t("run","save");
x.t("run","immediately");
x.t("run","service");
x.t("run","server");
x.t("scheduled","user");
x.t("scheduled","time");
x.t("scheduled","start");
x.t("scheduled","tasks");
x.t("scheduled","task");
x.t("scheduled","run");
x.t("scheduled","server");
x.t("following","field");
x.t("system","tasks");
x.t("scheduling","execution");
x.t("scheduling","servers");
x.t("using","built-in");
x.t("using","assign");
x.t("assigning","input");
x.t("statistics","screen");
x.t("invoke","service");
x.t("days","times");
x.t("days","week");
x.t("effect","immediately");
x.t("suspend","place");
x.t("even","previous");
x.t("server","scheduler");
x.t("server","execute");
x.t("server","uses");
x.t("server","start");
x.t("server","wait");
x.t("server","tasks");
x.t("server","perform");
x.t("server","begin");
x.t("server","specifies");
x.t("server","connected");
x.t("server","choose");
x.t("server","executes");
x.t("specify","user");
x.t("specify","xxx");
x.t("specify","86400");
x.t("specify","start");
x.t("specify","1800");
x.t("specify","information");
x.t("specify","date");
x.t("specify","following");
x.t("inputs","overwrites");
x.t("inputs","specifies");
x.t("authorized","invoke");
x.t("seconds","want");
x.t("seconds","repeating");
x.t("seconds","executions");
}
