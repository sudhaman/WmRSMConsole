function FileData_Pairs(x)
{
x.t("example","matches");
x.t("-2014","software");
x.t("2007","-2014");
x.t("lists","acls");
x.t("clear","entries");
x.t("related","topics");
x.t("current","access");
x.t("execute","acl");
x.t("line","specifies");
x.t("line","itself");
x.t("orders.inbound:post","order");
x.t("mode","settings");
x.t("mode","return");
x.t("mode","screen");
x.t("mode","portname");
x.t("mode","setting");
x.t("mode","allowing/denying");
x.t("open","add");
x.t("type","fully");
x.t("wildcard","characters");
x.t("change","global");
x.t("darmstadt","germany");
x.t("text","box");
x.t("removes","entries");
x.t("access","mode");
x.t("access","add");
x.t("access","screen");
x.t("access","folders");
x.t("access","restrictions");
x.t("want","allow");
x.t("single","character");
x.t("updates","allow");
x.t("advanced","controls");
x.t("security","ports");
x.t("list","related");
x.t("list","type");
x.t("list","select");
x.t("list","section");
x.t("list","changes");
x.t("list","click");
x.t("list","services");
x.t("list","save");
x.t("list","folders");
x.t("list","append");
x.t("add","name");
x.t("add","folders");
x.t("group","services");
x.t("group","folders");
x.t("results","allow");
x.t("settings","add");
x.t("name","text");
x.t("name","list");
x.t("name","acl");
x.t("name","service");
x.t("box","line");
x.t("edit","access");
x.t("edit","advanced");
x.t("edit","list");
x.t("selection","append");
x.t("allow","list");
x.t("allow","add");
x.t("ports","edit");
x.t("characters","match");
x.t("characters","orders.inbound:sgx");
x.t("allowing","denying");
x.t("selected","appends");
x.t("selected","names");
x.t("denying","port");
x.t("appends","selected");
x.t("allowed","port");
x.t("allowed","denied");
x.t("select","add");
x.t("select","group");
x.t("select","name");
x.t("select","acl");
x.t("select","folders");
x.t("specifies","names");
x.t("may","following");
x.t("software","darmstadt");
x.t("heading","security");
x.t("section","select");
x.t("section","compose");
x.t("match","group");
x.t("changes","effect");
x.t("purpose","example");
x.t("return","current");
x.t("return","edit");
x.t("folder","name");
x.t("folder","service");
x.t("fully","qualified");
x.t("matches","single");
x.t("matches","sequence");
x.t("click","return");
x.t("enter","folder");
x.t("and/or","folders");
x.t("qualified","folder");
x.t("orders.inbound:sgx","matches");
x.t("similar","names");
x.t("depending","current");
x.t("services","allow");
x.t("services","allowing");
x.t("services","section");
x.t("services","and/or");
x.t("services","similar");
x.t("services","services");
x.t("services","screen");
x.t("services","either");
x.t("screen","2007");
x.t("screen","add");
x.t("screen","edit");
x.t("screen","select");
x.t("screen","heading");
x.t("screen","screen");
x.t("sequence","characters");
x.t("defined","server");
x.t("save","additions");
x.t("acl","lists");
x.t("acl","list");
x.t("acl","select");
x.t("acl","setting");
x.t("port","access");
x.t("port","enter");
x.t("character","orders.inbound:post");
x.t("character","purpose");
x.t("global","access");
x.t("topics","change");
x.t("itself","may");
x.t("acls","defined");
x.t("order","select");
x.t("immediately","clear");
x.t("controls","screen");
x.t("either","allowed");
x.t("service","name");
x.t("service","per");
x.t("following","wildcard");
x.t("portname","add");
x.t("setting","open");
x.t("setting","selection");
x.t("folders","execute");
x.t("folders","want");
x.t("folders","allowing");
x.t("folders","allowed");
x.t("folders","services");
x.t("folders","acl");
x.t("per","line");
x.t("names","allow");
x.t("names","services");
x.t("names","character");
x.t("append","results");
x.t("append","selected");
x.t("denied","depending");
x.t("effect","immediately");
x.t("restrictions","screen");
x.t("allowing/denying","folders");
x.t("compose","list");
x.t("entries","removes");
x.t("entries","allow");
x.t("server","select");
x.t("additions","updates");
}
